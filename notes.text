//--notes on the current feature or issue--\\

project:reference on conversation model: goal is to be able to reference any 
    resource in a conversation.
    want to, when prompted to start a conversation after viewing a resource, have
        that resource automatically referenced in the conversation
     
    have a before filter to make sure the user is signed in (use
      def authenticate_user! in application_controller.rb as the filter)
    want the authenticate_user! method to hide all other modals when it pops up
    
    create another concern file: conversationable
        to be included in any model we want to have the ability to have conversations
        about

only push the changes we're keeping: ie
    leads_controller
    _request_lead
    create
    new
    
    actually, joe says to do a global search on lead and rm all those files
    
play with the conversation thing user/visitor

have request_lead be called when a link is clicked (joe said he'd probably do this)
    so that when the user is done looking at the linked-to site, and returns to 
    our site, they will get the request_lead modal pop up

!!didnt change the routes file

----OTHER WORKING----

review polymorphic and write notes on what it means

----OLD NOTES----

relationship between page and pageable:
    remember that each of these are just models (think of them as variables)
    page is a way to hold certain attributes for each pageable
    pageables are types of resources: we have 5 now -- events, links, etc
    certain attributes of every pageable is synced with the page table, namely:
        query_path, title, slug, state, created_at, updated_at, published_at, 
        and edited_at (these are in the page model)

"The Rails router recognizes URLs and dispatches them to a controller's 
        action. It can also generate paths and URLs, avoiding the need to 
        hardcode strings in your views." --rubyonrails.org
